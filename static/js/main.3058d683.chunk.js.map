{"version":3,"sources":["SetBoard.js","passMove.js","BouncingBallv2.js","App.js","About.js","Main.js","Tutorial.js","serviceWorker.js","index.js"],"names":["clearGlow","clearTimeout","document","querySelectorAll","forEach","e","classList","remove","SetNests","nestContent","i","playerMove","predictMove","playerName","playerScore","nests","push","className","key","id","j","onClick","target","onMouseEnter","onMouseLeave","onMouseUp","SetBoard","playerNumber","board","passMove","activePlayer","tempArr","indexOf","length","bouncingBall","canvass","item","canvas","getBoundingClientRect","Ball","create","dx","dy","newBall","Object","this","width","height","element","createElement","style","parseInt","appendChild","moveTo","x","y","left","top","changeDirectionIfNecessary","draw","ball","setTimeout","parent","firstChild","removeChild","removeAllChildNodes","Math","floor","random","vx","vy","App","menuItems","useState","setNestContent","nextPlayer","setPlayerScore","menuItemsArr","tempScore","useEffect","player","querySelector","playerBtns","disabled","add","scoreboardCanvass","scoring","a","newScore","addedPoints","some","updateScore","map","link","exact","to","name","btn","nestOriginal","spreadLength","spreadOverflow","nestFinal","tempArr1","spreadLength1","isZero","currentValue","splice","nullify","slice","every","NextPlayerBoard","About","Main","menu","Tutorial","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ShowDropdownMenu","withRouter","props","pathname","activeClassName","icon","faBars","ReactDOM","render","StrictMode","path","component","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3058d683.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst clearGlow = () => {\r\n    clearTimeout();\r\n    const btnsList = document.querySelectorAll(\".nest\");\r\n    btnsList.forEach(e => e.classList.remove(\"nest-drop\", \"nest-final\"));\r\n};\r\n\r\nconst SetNests = ({nestContent, i, playerMove, predictMove, playerName, playerScore}) => {\r\n\r\n    const nests = [];\r\n\r\n    nests.push(<div className={`${playerName[i]}Scoreboard scoreboard`}>\r\n        <div className=\"text\">{playerName[i]}: {playerScore[i]} points</div>\r\n        <div\r\n            className='scoreboardCanvas'\r\n            key={i}\r\n            id={i}/>\r\n    </div>);\r\n\r\n    if (i === 1) {\r\n        for (let j=5; j>=0; j--){\r\n            nests.push(<button\r\n                className={`nest btn-${i*6+j}`}\r\n                key={i*6+j}\r\n                id={i*6+j}\r\n                onClick={(e) => playerMove(e.target, {i})}\r\n                onMouseEnter={e => predictMove(e.target)}\r\n                onMouseLeave={() =>clearGlow()}\r\n                onMouseUp={() =>clearGlow()}\r\n            >\r\n                <div\r\n                    className='canvas'\r\n                    key={i*6+j}\r\n                    id={i*6+j}/>\r\n                <div className=\"text\">{nestContent[i*6+j]}</div>\r\n            </button>)}\r\n\r\n\r\n        return (<>{nests}</>)\r\n    }\r\n\r\n    for (let j=0; j<6; j++){\r\n        nests.push(<button\r\n            className={`nest btn-${i*6+j}`}\r\n            key={i*6+j}\r\n            id={i*6+j}\r\n            onClick={(e) => playerMove(e.target, {i})}\r\n            onMouseEnter={e => predictMove(e.target)}\r\n            onMouseLeave={() =>clearGlow()}\r\n            onMouseUp={() =>clearGlow()}\r\n        >\r\n            <div\r\n                className='canvas'\r\n                key={i*6+j}\r\n                id={i*6+j}/>\r\n            <div className=\"text\">{nestContent[i*6+j]}</div>\r\n        </button>)}\r\n\r\n    return (<>{nests}</>)\r\n};\r\n\r\nconst SetBoard = ({playerNumber, nestContent, playerMove, predictMove, playerName, playerScore}) => {\r\n\r\n    const board = [];\r\n\r\n    for (let i=0; i<playerNumber; i++){\r\n        board.push(\r\n            <section className={playerName[i]} key={i}>\r\n            <SetNests nestContent={nestContent} playerMove={playerMove} i={i} predictMove={predictMove} playerName={playerName} playerScore={playerScore}/>\r\n            </section>)}\r\n\r\n    return (\r\n        <>\r\n            {board}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default SetBoard;","import React from 'react';\r\n\r\nconst passMove = (activePlayer, playerName, playerNumber) => {\r\n    const tempArr = [...playerName];\r\n\r\n    if (tempArr.indexOf(activePlayer) === (tempArr.length -1)){\r\n        return tempArr[0]\r\n    }\r\n    return tempArr[tempArr.indexOf(activePlayer) +1]\r\n};\r\n\r\n\r\nexport default passMove;","import React from 'react';\r\n\r\nconst bouncingBall = (canvass, tempArr) => {\r\n\r\nconst canvasField = [...canvass];\r\n\r\n    canvasField.forEach((item) => {\r\n\r\n        const canvas = item.getBoundingClientRect();\r\n\r\n        const Ball = {\r\n            create: function (dx, dy) {\r\n                const newBall = Object.create(this);\r\n                newBall.dx = dx;\r\n                newBall.dy = dy;\r\n                newBall.width = canvas.height / 30;\r\n                newBall.height = canvas.height / 30;\r\n                newBall.element = document.createElement('div');\r\n                newBall.element.style.width = newBall.width + 'px';\r\n                newBall.element.style.height = newBall.height + 'px';\r\n                newBall.element.className += ' ball';\r\n                newBall.width = parseInt(newBall.element.style.width);\r\n                newBall.height = parseInt(newBall.element.style.height);\r\n                item.appendChild(newBall.element);\r\n                return newBall;\r\n            },\r\n            moveTo: function (x, y) {\r\n                this.element.style.left = x + 'px';\r\n                this.element.style.top = y + 'px';\r\n            },\r\n            changeDirectionIfNecessary: function (x, y) {\r\n                if (x < 3 || x > canvas.width - this.width -3) {\r\n                    this.dx = -this.dx;\r\n                }\r\n                if (y < 3 || y > canvas.height - this.height -3) {\r\n                    this.dy = -this.dy;\r\n                }\r\n            },\r\n            draw: function (x, y) {\r\n                this.moveTo(x, y);\r\n                var ball = this;\r\n                setTimeout(function () {\r\n                    ball.changeDirectionIfNecessary(x, y);\r\n                    ball.draw(x + ball.dx, y + ball.dy);\r\n                }, 1000 / 60);\r\n            }\r\n        };\r\n\r\n        const removeAllChildNodes = (parent) => {\r\n            while (parent.firstChild) {\r\n                parent.removeChild(parent.firstChild);\r\n            }\r\n        };\r\n\r\n        removeAllChildNodes(item);\r\n\r\n        for (let i = 0; i < tempArr[item.id]; i++){\r\n            // const x = (Math.floor(Math.random() * canvas.width));\r\n            // const y = (Math.floor(Math.random() * canvas.height));\r\n            const x = (Math.floor((Math.random() * canvas.width) -6 ) + 6);\r\n            const y = (Math.floor((Math.random() * canvas.height) -6 ) + 6);\r\n            const vx = Math.floor(Math.random() * 3) + 0.5 ;\r\n            const vy = Math.floor(Math.random() * 4) + 0.5;\r\n\r\n            const ball = Ball.create(vx, vy);\r\n            ball.draw(x, y);\r\n        }\r\n    });\r\n};\r\n\r\nexport default bouncingBall;\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport SetBoard from './SetBoard.js';\r\nimport passMove from './passMove';\r\nimport bouncingBall from \"./BouncingBallv2\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction App({menuItems}) {\r\n    const [playerNumber, setPlayerNumber] = useState(2);\r\n    const [nestContent, setNestContent] = useState([4,4,4,4,4,4,4,4,4,4,4,4]);\r\n    const [activePlayer, nextPlayer] = useState(\"botPlayer\");\r\n    const [playerScore, setPlayerScore] = useState([0,0]);\r\n    const playerName = [\"botPlayer\", \"topPlayer\"];\r\n    const menuItemsArr = [...menuItems];\r\n    let tempScore = 0;\r\n\r\n    useEffect(() => {\r\n       const player = document.querySelector(`.${activePlayer}`);\r\n       const playerBtns = document.querySelectorAll(`.${activePlayer} .nest`);\r\n\r\n        (playerName.indexOf(activePlayer) === 0)?(\r\n            document.querySelector(`.${playerName[playerName.length-1]}`).classList.remove(\"activePlayer\")\r\n        ):(\r\n            document.querySelector(`.${playerName[playerName.indexOf(activePlayer)-1]}`).classList.remove(\"activePlayer\")\r\n        );\r\n\r\n        (playerName.indexOf(activePlayer) === 0)?(\r\n            document.querySelectorAll(`.${playerName[playerName.length-1]} .nest`).forEach((e) => {e.disabled = true})\r\n        ):(\r\n            document.querySelectorAll(`.${playerName[playerName.indexOf(activePlayer)-1]} .nest`).forEach((e) => {e.disabled = true})\r\n        );\r\n       player.classList.add(\"activePlayer\");\r\n       playerBtns.forEach((e) => {e.disabled = false});\r\n    });\r\n\r\n\r\n    useEffect(() =>{\r\n        const canvass = document.querySelectorAll('.canvas');\r\n        const scoreboardCanvass = document.querySelectorAll('.scoreboardCanvas');\r\n\r\n        bouncingBall(canvass, nestContent);\r\n        bouncingBall(scoreboardCanvass, playerScore);\r\n    });\r\n\r\n    const winner = () => {\r\n        if (playerName.indexOf(activePlayer) === 0  ){\r\n            return playerName[playerName.length - 1]\r\n        }\r\n        return playerName[playerName.indexOf(activePlayer)-1]\r\n    };\r\n\r\n    const updateScore = (addedPoints, playerScore, playerName, activePlayer) => {\r\n        const tempArr = [...playerScore];\r\n        const currentPlayerIndex = playerName.indexOf(activePlayer);\r\n        tempArr[currentPlayerIndex] += parseInt(addedPoints);\r\n        if (tempArr.some(x => x > 24)){document.querySelector('.winnerBoard').classList.add('winnerBoardVisible')}\r\n        return [...tempArr]\r\n    };\r\n\r\n    const scoring = (a, tempArr) => {\r\n        if ((parseInt(tempArr[a]) === 2 || parseInt(tempArr[a]) === 3) && Math.floor(a/6) !== playerName.indexOf(activePlayer)){\r\n            tempScore += tempArr[a];\r\n            tempArr[a]=0;\r\n            scoring((a-1), tempArr);\r\n        }\r\n\r\n        const newScore = updateScore(tempScore, playerScore, playerName, activePlayer);\r\n        setPlayerScore(newScore);\r\n    };\r\n\r\n    const NextPlayerBoard = (tempArr, nestOriginal, nestFinal) => {\r\n        const tempArr1 = [...tempArr];\r\n        const spreadLength1 = tempArr1[nestOriginal];\r\n\r\n        const isZero = (currentValue) => currentValue === 0;\r\n        const nullify = (a, tempArr1) => {\r\n            if ((parseInt(tempArr1[a]) === 2 || parseInt(tempArr1[a]) === 3) && Math.floor(a/6) !== playerName.indexOf(activePlayer)){\r\n                tempArr1[a]=0;\r\n                nullify((a-1), tempArr1);\r\n            }\r\n        };\r\n        tempArr1.splice(nestOriginal, 1);\r\n\r\n        for (let i = 0; i < spreadLength1; i++) {\r\n            tempArr1[(nestOriginal + i) - (tempArr1.length * ((nestOriginal + i - ((nestOriginal + i) % tempArr1.length)) / tempArr1.length))] += 1\r\n        }\r\n        tempArr1.splice((nestOriginal), 0, 0);\r\n\r\n        nullify(nestFinal,tempArr1);\r\n\r\n        if (playerName.indexOf(activePlayer) === (playerName.length-1)) {\r\n            return tempArr1.slice(0, 6).every(isZero)\r\n        }\r\n\r\n        return tempArr1.slice((6 *(playerName.indexOf(activePlayer)+1)), (6 *(playerName.indexOf(activePlayer)+1))+6).every(isZero)\r\n    };\r\n\r\n    const playerMove = (btn) => {\r\n        const tempArr = [...nestContent];\r\n        const nestOriginal = parseInt(btn.id);\r\n        const spreadLength = tempArr[nestOriginal];\r\n        const spreadOverflow = (a) => {return (nestOriginal + a - ((nestOriginal + a) % tempArr.length)) / tempArr.length};\r\n        const nestFinal = (nestOriginal + spreadLength) - (tempArr.length * spreadOverflow(spreadLength));\r\n        const nestFinalValue = tempArr[nestFinal] +1;\r\n\r\n\r\n        // can't choose an empty nest\r\n        if (spreadLength === 0) {return}\r\n\r\n        // can't make a move, that prevents opponent from making a move\r\n        if (NextPlayerBoard(tempArr, nestOriginal, nestFinal)) {return}\r\n\r\n        tempArr.splice(nestOriginal, 1);\r\n\r\n        for (let i = 0; i < spreadLength; i++) {\r\n            tempArr[(nestOriginal + i) - (tempArr.length * spreadOverflow(i))] += 1\r\n        }\r\n        tempArr.splice((nestOriginal), 0, 0);\r\n\r\n        scoring(nestFinal,tempArr);\r\n        tempScore = 0;\r\n\r\n\r\n        setNestContent(tempArr);\r\n        nextPlayer(()=>passMove(activePlayer, playerName, playerNumber));\r\n    };\r\n\r\n    const predictMove = (btn) => {\r\n        const tempArr = [...nestContent];\r\n        const nestOriginal = parseInt(btn.id);\r\n        const spreadLength = tempArr[nestOriginal];\r\n        const spreadOverflow = (a) => {return (nestOriginal + a - ( (nestOriginal + a) % tempArr.length)) / tempArr.length};\r\n\r\n        if (spreadLength === 0) {return}\r\n\r\n        if (btn.disabled) {return}\r\n\r\n        for (let i = 0; i <= spreadLength-1; i++) {\r\n            setTimeout (() => {(document.querySelector(`.btn-${nestOriginal+i - (tempArr.length * spreadOverflow(i))}`).classList.add(\"nest-drop\"))}, i*100)\r\n        }\r\n\r\n        setTimeout (() => {(document.querySelector(`.btn-${nestOriginal+spreadLength - (tempArr.length * spreadOverflow(spreadLength))}`).classList.add(\"nest-final\"))}, spreadLength * 100)\r\n    };\r\n\r\n    return (\r\n    <div className=\"App\">\r\n        <section className=\"App-board\">\r\n            <div\r\n                className=\"winnerBoard\">\r\n                <p className=\"winnerMessage\">\r\n                    Congratulations! Player {winner()} wins!\r\n                </p>\r\n                <ul className=\"winnerBoardMenu\">\r\n                    {menuItemsArr.map(item => (\r\n                        <li key={item.link}>\r\n                            <NavLink\r\n                                exact={item.link === \"/\"}\r\n                                to={item.link}\r\n                                className=\"menu-link\"\r\n                            >\r\n                                {item.name}\r\n                            </NavLink>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <SetBoard playerNumber={playerNumber} nestContent={nestContent} playerMove={playerMove} predictMove={predictMove} playerName={playerName} playerScore={playerScore}/>\r\n        </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './App.css'\r\n\r\nconst About = () => {\r\n    return (\r\n        <section\r\n        className=\"aboutSection\">\r\n            <h1>Oware</h1>\r\n            <h4>From Wikipedia, the free encyclopedia</h4>\r\n            <section> Oware is an abstract strategy game among the Mancala family of board games (pit and pebble games) played worldwide with slight variations as to the layout of the game, number of players and strategy of play.[1] Its origin is uncertain[2] but it is widely believed to be of Akan origin.</section>\r\n\r\n            <section> Played in the Ashanti Region of Ghana and throughout the Caribbean, Oware and its variants have many names - Ayò, Ayoayo (Yoruba), Awalé (Ivory Coast, Benin), Wari (Mali), Ouri, Ouril or Uril (Cape Verde), Warri (Caribbean) Pallanguzhi (India) Wali (Dagbani), Adji (Ewe), Nchọ/Ókwè (Igbo), ise (Edo), Awale in (Ga) meaning Spoons in English according to the Ga name for the game. A common name in English is Awari but one of the earliest Western scholars to study the game, Robert Sutherland Rattray, used the name Wari. </section>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default About;","import React from 'react';\r\nimport {\r\n    NavLink\r\n} from 'react-router-dom';\r\n\r\nconst Main = ({menuItems}) => {\r\n    const menu = [...menuItems];\r\n    menu.splice(0, 1);\r\n    return (\r\n        <>\r\n            <h1\r\n            className=\"mainTitle\"\r\n            >\r\n                Welcome to Eware - digital version of Oware boardgame!\r\n            </h1>\r\n            <nav\r\n                className=\"btnContainer\"\r\n                >\r\n                <ul className=\"mainMenu\">\r\n                    {menu.map(item => (\r\n                        <li key={item.link}>\r\n                            <NavLink\r\n                                exact={item.link === \"/\"}\r\n                                to={item.link}\r\n                                className=\"menu-link\"\r\n                            >\r\n                                {item.name}\r\n                            </NavLink>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </nav>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Main;","import React from 'react';\r\nimport './App.css'\r\n\r\nconst Tutorial = () => {\r\n    return (\r\n        <section\r\n            className=\"tutorialSection\">\r\n            <h1>Tutorial</h1>\r\n            <h4>From Wikipedia, the free encyclopedia</h4>\r\n\r\n            <h2>Object</h2>\r\n            <section>\r\n                The game starts with four seeds in each house. The object of the game is to capture more seeds than one's opponent.\r\n                Since the game has only 48 seeds, capturing 25 is sufficient to win the game. Since there is an even number of seeds,\r\n                it is possible for the game to end in a draw, where each player has captured 24.\r\n            </section>\r\n\r\n            <h2>Sowing</h2>\r\n            <section>\r\n                Players take turns moving the seeds. On a turn, a player chooses one of the six houses under their control.\r\n                The player removes all seeds from that house, and distributes them, dropping one in each house counter-clockwise\r\n                from this house, in a process called sowing. Seeds are not distributed into the end scoring houses, nor into the\r\n                house drawn from. The starting house is always left empty; if it contained 12 (or more) seeds, it is skipped, and\r\n                the twelfth seed is placed in the next house.\r\n            </section>\r\n\r\n             <section>Knowing the number of seeds in each house is, of course, important to game play. When there are many seeds\r\n                 in a house, sometimes enough to make a full lap of the board or more, they cannot easily be counted by eye, and\r\n                 their number is often guarded by the player who controls that house. This may be done by repeatedly moving the\r\n                 seeds in the house. A player may count the seeds when contemplating a move; in such cases the last few are usually\r\n                 counted in the hand to avoid revealing their number.\r\n             </section>\r\n\r\n            <h2>Capturing</h2>\r\n            <section>\r\n                In Oware Abapa, capturing occurs only when a player brings the count of an opponent's house to exactly two or three\r\n                with the final seed he sowed in that turn.[5] This always captures the seeds in the corresponding house, and possibly\r\n                more: If the previous-to-last seed also brought an opponent's house to two or three, these are captured as well,\r\n                and so on until a house is reached which does not contain two or three seeds or does not belong to the opponent.\r\n                The captured seeds are placed in the player's scoring house (or set aside if the board has no scoring houses).\r\n                However, if a move would capture all of an opponent's seeds, the capture is forfeited since this would prevent the\r\n                opponent from continuing the game, and the seeds are instead left on the board. In the adjacent diagram, the lower\r\n                player would capture all the seeds in houses e, d, and c but not b (as it has four seeds) or a (since it is not\r\n                contiguous to the other captured houses).\r\n            </section>\r\n\r\n            <h2>Let the opponent play</h2>\r\n            <section>\r\n                The proscription against capturing all an opponent's seeds is related to a more general idea, that one ought to make\r\n                a move that allows the opponent to continue playing. If an opponent's houses are all empty, the current player must\r\n                make a move that gives the opponent seeds. If no such move is possible, the current player captures all seeds in\r\n                his/her own territory, ending the game.\r\n            </section>\r\n\r\n            <h2>Winning</h2>\r\n            <section>\r\n                The game is over when one player has captured 25 or more seeds, or each player has taken 24 seeds (draw).\r\n                If both players agree that the game has been reduced to an endless cycle, the game ends when each player has seeds\r\n                in his holes and then each player captures the seeds on their side of the board.\r\n            </section>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default Tutorial;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n    BrowserRouter,\r\n    Route,\r\n    withRouter,\r\n    Switch,\r\n    NavLink,\r\n} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport About from './About';\r\nimport Main from './Main';\r\nimport Tutorial from \"./Tutorial\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nconst DropdownMenu = (props) => {\r\n    const {location} = props;\r\n    if (location.pathname === \"/Eware\") {return null}\r\n        return (<nav className=\"dropdown\">\r\n            <ul className=\"dropdown-content\">\r\n                {menuItems.map(item => (\r\n                    <li key={item.link}>\r\n                        <NavLink\r\n                            exact={item.link === \"/\"}\r\n                            to={item.link}\r\n                            className=\"menu-link\"\r\n                            activeClassName=\"menu-link-active\"\r\n                        >\r\n                            {item.name}\r\n                        </NavLink>\r\n                    </li>\r\n                ))}\r\n                {/*<Save/>*/}\r\n            </ul>\r\n            <button className=\"dropbtn\"><FontAwesomeIcon icon={faBars} /></button>\r\n        </nav>)\r\n};\r\nconst ShowDropdownMenu = withRouter(DropdownMenu);\r\nconst Load = () => <h1>Load previously played game </h1>;\r\nconst NotFound = () => <h1>404 Page not found</h1>;\r\n\r\nconst menuItems = [\r\n    {\r\n        link: \"/Eware\",\r\n        name: \"Main Page\"\r\n    },\r\n    {\r\n        link: \"/About\",\r\n        name: \"About Oware\"\r\n    },\r\n    {\r\n        link: \"/Tutorial\",\r\n        name: \"Tutorial\"\r\n    },\r\n    {\r\n        link: \"/play\",\r\n        name: \"New Game\"\r\n    },\r\n    {\r\n        link: \"/load\",\r\n        name: \"Load Game\"\r\n    }\r\n];\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n        <div className=\"mainContainer\">\r\n            <header>\r\n                <ShowDropdownMenu/>\r\n            </header>\r\n            <Switch>\r\n                <Route path=\"/Eware\"><Main menuItems={menuItems}/></Route>\r\n                <Route path=\"/About\" component={About} />\r\n                <Route path=\"/Tutorial\" component={Tutorial} />\r\n                <Route path=\"/play\"><App menuItems={menuItems}/></Route>\r\n                <Route path=\"/load\" component={Load} />\r\n                <Route component={NotFound} />\r\n            </Switch>\r\n        </div>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}